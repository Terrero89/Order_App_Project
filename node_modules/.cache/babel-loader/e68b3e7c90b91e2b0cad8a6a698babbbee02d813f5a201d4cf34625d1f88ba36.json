{"ast":null,"code":"import _slicedToArray from\"/home/terrero/Documents/Web Development/Frontend/React_Projects/food_order_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from\"react\";import classes from\"./Checkout.module.css\";//?helper functions\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()===\"\";};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){//useStates for each input validationwithan object\nvar _useState=useState({name:true,street:true,city:true,postal:true}),_useState2=_slicedToArray(_useState,2),formInputsValidation=_useState2[0],setFormInputsValidation=_useState2[1];//using useRef for the values\nvar nameInputRef=useRef();var streetInputRef=useRef();var postalInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostal=postalInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);//validating entered name\nvar enteredStreetIsValid=!isEmpty(enteredStreet);//validating entered name\nvar enteredCityIsValid=!isEmpty(enteredCity);//validating entered name\nvar enteredPostalIsValid=isFiveChars(enteredPostal);//validating entered name\nsetFormInputsValidation({name:enteredNameIsValid,street:enteredCityIsValid,city:enteredCityIsValid,postal:enteredPostalIsValid});var formIsValid=enteredNameIsValid&&enteredCityIsValid&&enteredPostalIsValid&&enteredStreetIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredCity,postal:enteredPostal,city:enteredCity});//action \nconsole.log(\"form sent\");};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidation.name?\"\":classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidation.city?\"\":classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidation.street?\"\":classes.invalid);var postalControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidation.postal?\"\":classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidation.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter correct name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidation.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter correct street\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalInputRef}),!formInputsValidation.postal&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter correct postal\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidation.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter correct city\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["useRef","useState","classes","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","isFiveChars","length","Checkout","props","_useState","name","street","city","postal","_useState2","_slicedToArray","formInputsValidation","setFormInputsValidation","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","onConfirm","console","log","nameControlClasses","concat","control","invalid","cityControlClasses","streetControlClasses","postalControlClasses","className","form","onSubmit","children","htmlFor","type","id","ref","actions","onClick","onCancel","submit"],"sources":["/home/terrero/Documents/Web Development/Frontend/React_Projects/food_order_app/src/components/Cart/checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\n//?helper functions\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n    //useStates for each input validationwithan object\n  \n  const [formInputsValidation, setFormInputsValidation] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postal: true,\n  });\n\n  //using useRef for the values\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName); //validating entered name\n    const enteredStreetIsValid = !isEmpty(enteredStreet); //validating entered name\n    const enteredCityIsValid = !isEmpty(enteredCity); //validating entered name\n    const enteredPostalIsValid = isFiveChars(enteredPostal); //validating entered name\n\n    setFormInputsValidation({\n      name: enteredNameIsValid,\n      street: enteredCityIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredCityIsValid &&\n      enteredPostalIsValid &&\n      enteredStreetIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n      \n      props.onConfirm({\n          name: enteredName,\n          street: enteredCity,\n          postal: enteredPostal,\n          city: enteredCity\n      })\n      //action \n    console.log(\"form sent\")\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidation.name ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidation.city ? \"\" : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputsValidation.street ? \"\" : classes.invalid\n  }`;\n  const postalControlClasses = `${classes.control} ${\n    formInputsValidation.postal ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidation.name && <p>Please enter correct name</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidation.street && (\n          <p>Please enter correct street</p>\n        )}\n      </div>\n      <div className={postalControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputsValidation.postal && (\n          <p>Please enter correct postal</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidation.city && <p>Please enter correct city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}